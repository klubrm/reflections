When would you want to use a remote repository rather than keeping all your work local?

You may want to use a remote repository if you are interested in sharing your work with others, or are working on something with another developer. This way people have access to what you're working on and can possibly contribute or help.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

One benefit of pulling changes manually allows you the option of disregarding a change that has been made to the remote repository.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks are used when you want to take someone else's repository and work on it on your computer without affecting their repository. Clones make an exact copy of someone else's, or your own, repository on your computer. A fork is useful when you don't have permission to change someone else's repository but you want to work on their project seperately.

What is the benefit of having a copy of the last known state of the remote stored locally?

The benefit of having a copy of the last known state of the remote stored locally is that your master branch is up to date and you can work on it offline.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Collaborating without Git or GitHub would present challenges in combining projects that have deviated greatly since originally "checking them out". Without Git or Github, I imagine that conflicts in code would be much more difficult to resolve. 

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

Making changes in a seperate branch could allow you to experiment with more radical changes, new features, or versions. Making changes in master is useful, if for example, you are working on what will be the production code or what you want to make public.